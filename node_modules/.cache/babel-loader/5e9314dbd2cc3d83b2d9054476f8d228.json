{"ast":null,"code":"var _jsxFileName = \"/home/mlandry/pokemaster/src/components/App.js\";\nimport React from \"react\";\nimport axios from \"../api/pokeapi\";\nimport PokeImage from \"./PokeImage\";\nimport TypeCard from \"./TypeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pokemon: \"\",\n      type1: \"\",\n      type2: \"\"\n    };\n\n    this.pokemonRequest = async () => {\n      let pokeid = Math.floor(Math.random() * 300) + 1;\n      const response = await axios.get(`/pokemon/${pokeid}`);\n      this.setState({\n        pokemon: response.data,\n        type1: response.data.types[0].type.name\n      });\n      if (response.data.types[1]) this.setState({\n        type2: response.data.types[1].type.name\n      });\n    };\n\n    this.typeGen = () => {\n      let atkType = Math.floor(Math.random() * 18) + 1;\n      let defType = Math.floor(Math.random() * 18) + 1;\n      this.typeRequest(atkType, defType);\n    };\n\n    this.typeRequest = async (atkType, defType) => {\n      console.log(atkType);\n      const apiAtkType = await axios.get(`/type/${atkType}`);\n      const apiDefType = await axios.get(`/type/${defType}`);\n      console.log(apiAtkType.data.name);\n      console.log(apiDefType.data.name);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.typeGen,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mlandry/pokemaster/src/components/App.js"],"names":["React","axios","PokeImage","TypeCard","App","Component","state","pokemon","type1","type2","pokemonRequest","pokeid","Math","floor","random","response","get","setState","data","types","type","name","typeGen","atkType","defType","typeRequest","console","log","apiAtkType","apiDefType","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE,EAAtB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KADwB;;AAAA,SAKhCC,cALgC,GAKf,YAAY;AAC3B,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAA/C;AACA,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,YAAWL,MAAO,EAA7B,CAAvB;AAEA,WAAKM,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAEQ,QAAQ,CAACG,IADN;AAEZV,QAAAA,KAAK,EAAEO,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC;AAFvB,OAAd;AAKA,UAAIN,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAJ,EACE,KAAKF,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEM,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC;AAArC,OAAd;AACH,KAhB+B;;AAAA,SAoBhCC,OApBgC,GAoBtB,MAAM;AACd,UAAIC,OAAO,GAAGX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA/C;AACA,UAAIU,OAAO,GAAGZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA/C;AAEA,WAAKW,WAAL,CAAiBF,OAAjB,EAA0BC,OAA1B;AACD,KAzB+B;;AAAA,SA6BhCC,WA7BgC,GA6BlB,OAAOF,OAAP,EAAgBC,OAAhB,KAA4B;AACxCE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,YAAMK,UAAU,GAAG,MAAM3B,KAAK,CAACe,GAAN,CAAW,SAAQO,OAAQ,EAA3B,CAAzB;AACA,YAAMM,UAAU,GAAG,MAAM5B,KAAK,CAACe,GAAN,CAAW,SAAQQ,OAAQ,EAA3B,CAAzB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACV,IAAX,CAAgBG,IAA5B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYE,UAAU,CAACX,IAAX,CAAgBG,IAA5B;AACD,KAnC+B;AAAA;;AAqChCS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,KAAKR,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA9C+B;;AAiDlC,eAAelB,GAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"../api/pokeapi\";\r\nimport PokeImage from \"./PokeImage\";\r\nimport TypeCard from \"./TypeCard\";\r\n\r\nclass App extends React.Component {\r\n  state = { pokemon: \"\", type1: \"\", type2: \"\" };\r\n\r\n  // Function to request random pokemon information from PokeAPI\r\n  // returns pokemon name, type1, and type2 (if type2 exists)\r\n  pokemonRequest = async () => {\r\n    let pokeid = Math.floor(Math.random() * 300) + 1;\r\n    const response = await axios.get(`/pokemon/${pokeid}`);\r\n\r\n    this.setState({\r\n      pokemon: response.data,\r\n      type1: response.data.types[0].type.name,\r\n    });\r\n\r\n    if (response.data.types[1])\r\n      this.setState({ type2: response.data.types[1].type.name });\r\n  };\r\n\r\n  // Function to get two random numbers\r\n  // Also calls typeRequest\r\n  typeGen = () => {\r\n    let atkType = Math.floor(Math.random() * 18) + 1;\r\n    let defType = Math.floor(Math.random() * 18) + 1;\r\n\r\n    this.typeRequest(atkType, defType);\r\n  };\r\n\r\n  // Requests type data for 'attacking' type\r\n  // Updates state of type1 and type2 based on generated typing\r\n  typeRequest = async (atkType, defType) => {\r\n    console.log(atkType);\r\n    const apiAtkType = await axios.get(`/type/${atkType}`);\r\n    const apiDefType = await axios.get(`/type/${defType}`);\r\n    console.log(apiAtkType.data.name);\r\n    console.log(apiDefType.data.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.typeGen}>Start Game</button>\r\n        {/* <button onClick={this.pokemonRequest}>Click</button>\r\n        <PokeImage pokemon={this.state.pokemon} />\r\n        <TypeCard type1={this.state.type1} type2={this.state.type2} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}