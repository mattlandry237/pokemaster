{"ast":null,"code":"var _jsxFileName = \"/home/mlandry/pokemaster/src/components/App.js\";\nimport React from \"react\";\nimport axios from \"../api/pokeapi\";\nimport \"../css/App.css\";\nimport PokeImage from \"./PokeImage\";\nimport TypeCard from \"./TypeCard\";\nimport EffList from \"./EffList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      startBtn: \"not-started\",\n      pokemon: \"\",\n      type1: null,\n      type2: null\n    };\n\n    this.pokemonRequest = async () => {\n      let pokeid = Math.floor(Math.random() * 300) + 1;\n      const response = await axios.get(`/pokemon/${pokeid}`);\n      this.setState({\n        pokemon: response.data,\n        type1: response.data.types[0].type.name\n      });\n      if (response.data.types[1]) this.setState({\n        type2: response.data.types[1].type.name\n      });\n    };\n\n    this.typeGen = () => {\n      let atkType = Math.floor(Math.random() * 18) + 1;\n      let defType = Math.floor(Math.random() * 18) + 1;\n      this.typeRequest(atkType, defType);\n    };\n\n    this.typeRequest = async (atkType, defType) => {\n      const apiAtkType = await axios.get(`/type/${atkType}`);\n      const apiDefType = await axios.get(`/type/${defType}`);\n      console.log(apiAtkType.data.name);\n      console.log(apiDefType.data.name);\n      this.setState({\n        startBtn: \"started\",\n        type1: apiAtkType.data,\n        type2: apiDefType.data\n      });\n    };\n\n    this.effCheck = () => {\n      console.log(\"Rendering New Types\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.startBtn,\n        onClick: this.typeGen,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypeCard, {\n        type: this.state.type1,\n        stance: \"attacking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypeCard, {\n        type: this.state.type2,\n        stance: \"defending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EffList, {\n        effCheck: this.effCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mlandry/pokemaster/src/components/App.js"],"names":["React","axios","PokeImage","TypeCard","EffList","App","Component","state","startBtn","pokemon","type1","type2","pokemonRequest","pokeid","Math","floor","random","response","get","setState","data","types","type","name","typeGen","atkType","defType","typeRequest","apiAtkType","apiDefType","console","log","effCheck","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAAEC,MAAAA,QAAQ,EAAE,aAAZ;AAA2BC,MAAAA,OAAO,EAAE,EAApC;AAAwCC,MAAAA,KAAK,EAAE,IAA/C;AAAqDC,MAAAA,KAAK,EAAE;AAA5D,KADwB;;AAAA,SAKhCC,cALgC,GAKf,YAAY;AAC3B,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAA/C;AACA,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,YAAWL,MAAO,EAA7B,CAAvB;AAEA,WAAKM,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAEQ,QAAQ,CAACG,IADN;AAEZV,QAAAA,KAAK,EAAEO,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC;AAFvB,OAAd;AAKA,UAAIN,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAJ,EACE,KAAKF,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEM,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC;AAArC,OAAd;AACH,KAhB+B;;AAAA,SAoBhCC,OApBgC,GAoBtB,MAAM;AACd,UAAIC,OAAO,GAAGX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA/C;AACA,UAAIU,OAAO,GAAGZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA/C;AAEA,WAAKW,WAAL,CAAiBF,OAAjB,EAA0BC,OAA1B;AACD,KAzB+B;;AAAA,SA6BhCC,WA7BgC,GA6BlB,OAAOF,OAAP,EAAgBC,OAAhB,KAA4B;AACxC,YAAME,UAAU,GAAG,MAAM3B,KAAK,CAACiB,GAAN,CAAW,SAAQO,OAAQ,EAA3B,CAAzB;AACA,YAAMI,UAAU,GAAG,MAAM5B,KAAK,CAACiB,GAAN,CAAW,SAAQQ,OAAQ,EAA3B,CAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACR,IAAX,CAAgBG,IAA5B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACT,IAAX,CAAgBG,IAA5B;AACA,WAAKJ,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,SADE;AAEZE,QAAAA,KAAK,EAAEkB,UAAU,CAACR,IAFN;AAGZT,QAAAA,KAAK,EAAEkB,UAAU,CAACT;AAHN,OAAd;AAKD,KAvC+B;;AAAA,SAyChCY,QAzCgC,GAyCrB,MAAM;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KA3C+B;AAAA;;AA6ChCE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAE,KAAK1B,KAAL,CAAWC,QAA9B;AAAwC,QAAA,OAAO,EAAE,KAAKgB,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWG,KAA3B;AAAkC,QAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,KAA3B;AAAkC,QAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,KAAKqB;AAAxB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7D+B;;AAgElC,eAAe3B,GAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"../api/pokeapi\";\r\nimport \"../css/App.css\";\r\nimport PokeImage from \"./PokeImage\";\r\nimport TypeCard from \"./TypeCard\";\r\nimport EffList from \"./EffList\";\r\n\r\nclass App extends React.Component {\r\n  state = { startBtn: \"not-started\", pokemon: \"\", type1: null, type2: null };\r\n\r\n  // Function to request random pokemon information from PokeAPI\r\n  // returns pokemon name, type1, and type2 (if type2 exists)\r\n  pokemonRequest = async () => {\r\n    let pokeid = Math.floor(Math.random() * 300) + 1;\r\n    const response = await axios.get(`/pokemon/${pokeid}`);\r\n\r\n    this.setState({\r\n      pokemon: response.data,\r\n      type1: response.data.types[0].type.name,\r\n    });\r\n\r\n    if (response.data.types[1])\r\n      this.setState({ type2: response.data.types[1].type.name });\r\n  };\r\n\r\n  // Function to get two random numbers\r\n  // Also calls typeRequest\r\n  typeGen = () => {\r\n    let atkType = Math.floor(Math.random() * 18) + 1;\r\n    let defType = Math.floor(Math.random() * 18) + 1;\r\n\r\n    this.typeRequest(atkType, defType);\r\n  };\r\n\r\n  // Requests type data for 'attacking' type\r\n  // Updates state of type1 and type2 based on generated typing\r\n  typeRequest = async (atkType, defType) => {\r\n    const apiAtkType = await axios.get(`/type/${atkType}`);\r\n    const apiDefType = await axios.get(`/type/${defType}`);\r\n    console.log(apiAtkType.data.name);\r\n    console.log(apiDefType.data.name);\r\n    this.setState({\r\n      startBtn: \"started\",\r\n      type1: apiAtkType.data,\r\n      type2: apiDefType.data,\r\n    });\r\n  };\r\n\r\n  effCheck = () => {\r\n    console.log(\"Rendering New Types\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className={this.state.startBtn} onClick={this.typeGen}>\r\n          Start Game\r\n        </button>\r\n        <TypeCard type={this.state.type1} stance=\"attacking\" />\r\n        <br />\r\n        <TypeCard type={this.state.type2} stance=\"defending\" />\r\n        <br />\r\n        <EffList effCheck={this.effCheck} />\r\n        {/* <button onClick={this.pokemonRequest}>Click</button>\r\n        <PokeImage pokemon={this.state.pokemon} />\r\n        <TypeCard type1={this.state.type1} type2={this.state.type2} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}