{"ast":null,"code":"import React from \"react\"; // const TypeCard = ({ type1, type2 }) => {\n//   console.log(type1, type2);\n//     if (!type1 && !type2) return <div></div>;\n//   if (type2) {\n//     return (\n//       <div>\n//         <img src={types[`${type1}.png`]} />\n//         <img src={types[`${type2}.png`]} />\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <img src={types[`${type1}.png`]} />\n//       </div>\n//     );\n//   }\n//   return <img src={types[\"bug.png\"]} />;\n// };\n\nclass TypeCard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.types = importAll(require.context(\"../images/type\", false, /\\.(png|jpe?g|svg)$/));\n  }\n\n  importAll(r) {\n    let images = {};\n    r.keys().map((item, index) => {\n      images[item.replace(\"./\", \"\")] = r(item);\n    });\n    return images;\n  }\n\n  render() {}\n\n}\n\nexport default TypeCard;","map":{"version":3,"sources":["/home/mlandry/pokemaster/src/components/TypeCard.js"],"names":["React","TypeCard","Component","types","importAll","require","context","r","images","keys","map","item","index","replace","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SASrCC,KATqC,GAS7BC,SAAS,CACfC,OAAO,CAACC,OAAR,CAAgB,gBAAhB,EAAkC,KAAlC,EAAyC,oBAAzC,CADe,CAToB;AAAA;;AACrCF,EAAAA,SAAS,CAACG,CAAD,EAAI;AACX,QAAIC,MAAM,GAAG,EAAb;AACAD,IAAAA,CAAC,CAACE,IAAF,GAASC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BJ,MAAAA,MAAM,CAACG,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCN,CAAC,CAACI,IAAD,CAAlC;AACD,KAFD;AAGA,WAAOH,MAAP;AACD;;AAMDM,EAAAA,MAAM,GAAG,CAAE;;AAb0B;;AAgBvC,eAAeb,QAAf","sourcesContent":["import React from \"react\";\r\n\r\n// const TypeCard = ({ type1, type2 }) => {\r\n//   console.log(type1, type2);\r\n//     if (!type1 && !type2) return <div></div>;\r\n//   if (type2) {\r\n//     return (\r\n//       <div>\r\n//         <img src={types[`${type1}.png`]} />\r\n//         <img src={types[`${type2}.png`]} />\r\n//       </div>\r\n//     );\r\n//   } else {\r\n//     return (\r\n//       <div>\r\n//         <img src={types[`${type1}.png`]} />\r\n//       </div>\r\n//     );\r\n//   }\r\n//   return <img src={types[\"bug.png\"]} />;\r\n// };\r\n\r\nclass TypeCard extends React.Component {\r\n  importAll(r) {\r\n    let images = {};\r\n    r.keys().map((item, index) => {\r\n      images[item.replace(\"./\", \"\")] = r(item);\r\n    });\r\n    return images;\r\n  }\r\n\r\n  types = importAll(\r\n    require.context(\"../images/type\", false, /\\.(png|jpe?g|svg)$/)\r\n  );\r\n\r\n  render() {}\r\n}\r\n\r\nexport default TypeCard;\r\n"]},"metadata":{},"sourceType":"module"}